[{"D:\\Programming\\GitHub\\Social-Network\\src\\index.tsx":"1","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Preloader\\Preloader.tsx":"2","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\users-reducer.ts":"3","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\MyPosts\\MyPostsComponent.tsx":"4","D:\\Programming\\GitHub\\Social-Network\\src\\api\\posts-api.ts":"5","D:\\Programming\\GitHub\\Social-Network\\src\\api\\auth-api.ts":"6","D:\\Programming\\GitHub\\Social-Network\\src\\api\\profile-api.ts":"7","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\MyPosts\\PostForm.tsx":"8","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\BreadcrumbsComponent.tsx":"9","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\Profile.tsx":"10","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\ProfileStatus.tsx":"11","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\SocialLinksComponent.tsx":"12","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\UserContactsCompnent..tsx":"13","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\MyPosts\\Post.tsx":"14","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\DialogsPage\\Dialogs.tsx":"15","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\DialogsPage\\DialogsContainer.ts":"16","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Sidebar\\Sidebar.tsx":"17","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\app-reducer.ts":"18","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\posts-reducer.ts":"19","D:\\Programming\\GitHub\\Social-Network\\src\\api\\users-api.ts":"20","D:\\Programming\\GitHub\\Social-Network\\src\\api\\api.ts":"21","D:\\Programming\\GitHub\\Social-Network\\src\\App.tsx":"22","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\LoginPage\\Login.tsx":"23","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\PostsPage\\PostsPage.tsx":"24","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\SavedPage\\SavedPage.tsx":"25","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\dialogs-reducer.ts":"26","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\UsersPage\\Users.tsx":"27","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Paginator\\Paginator.tsx":"28","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\UsersPage\\UsersPage.tsx":"29","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\selectors\\users-selectors.ts":"30","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\selectors\\auth-selectors.ts":"31","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\profile-reducer.ts":"32"},{"size":711,"mtime":1626191975137,"results":"33","hashOfConfig":"34"},{"size":219,"mtime":1626191975133,"results":"35","hashOfConfig":"34"},{"size":4174,"mtime":1626191975145,"results":"36","hashOfConfig":"34"},{"size":1229,"mtime":1626202792239,"results":"37","hashOfConfig":"34"},{"size":373,"mtime":1626202797541,"results":"38","hashOfConfig":"34"},{"size":643,"mtime":1626202801150,"results":"39","hashOfConfig":"34"},{"size":1318,"mtime":1626202805011,"results":"40","hashOfConfig":"34"},{"size":1344,"mtime":1626202812483,"results":"41","hashOfConfig":"34"},{"size":1071,"mtime":1626202817304,"results":"42","hashOfConfig":"34"},{"size":5613,"mtime":1626879760204,"results":"43","hashOfConfig":"34"},{"size":1989,"mtime":1626202837685,"results":"44","hashOfConfig":"34"},{"size":5534,"mtime":1626202844267,"results":"45","hashOfConfig":"34"},{"size":1884,"mtime":1626202854508,"results":"46","hashOfConfig":"34"},{"size":1843,"mtime":1626202863136,"results":"47","hashOfConfig":"34"},{"size":5259,"mtime":1626202887394,"results":"48","hashOfConfig":"34"},{"size":646,"mtime":1626202890247,"results":"49","hashOfConfig":"34"},{"size":3934,"mtime":1626205516750,"results":"50","hashOfConfig":"34"},{"size":1014,"mtime":1626191975140,"results":"51","hashOfConfig":"34"},{"size":3597,"mtime":1626521448166,"results":"52","hashOfConfig":"34"},{"size":784,"mtime":1626205477675,"results":"53","hashOfConfig":"34"},{"size":420,"mtime":1626205482306,"results":"54","hashOfConfig":"34"},{"size":2487,"mtime":1626882079957,"results":"55","hashOfConfig":"34"},{"size":3926,"mtime":1626214522447,"results":"56","hashOfConfig":"34"},{"size":2451,"mtime":1626191975117,"results":"57","hashOfConfig":"34"},{"size":1417,"mtime":1626191975128,"results":"58","hashOfConfig":"34"},{"size":1298,"mtime":1626191975141,"results":"59","hashOfConfig":"34"},{"size":3038,"mtime":1626544586655,"results":"60","hashOfConfig":"34"},{"size":1733,"mtime":1626191975131,"results":"61","hashOfConfig":"34"},{"size":798,"mtime":1626544597529,"results":"62","hashOfConfig":"34"},{"size":664,"mtime":1626544607424,"results":"63","hashOfConfig":"34"},{"size":230,"mtime":1626544878531,"results":"64","hashOfConfig":"34"},{"size":3926,"mtime":1626191975143,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1qd71l2",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"D:\\Programming\\GitHub\\Social-Network\\src\\index.tsx",[],["135","136"],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Preloader\\Preloader.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\users-reducer.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\MyPosts\\MyPostsComponent.tsx",["137","138"],"D:\\Programming\\GitHub\\Social-Network\\src\\api\\posts-api.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\api\\auth-api.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\api\\profile-api.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\MyPosts\\PostForm.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\BreadcrumbsComponent.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\Profile.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\ProfileStatus.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\SocialLinksComponent.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\UserContactsCompnent..tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\MyPosts\\Post.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\DialogsPage\\Dialogs.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\DialogsPage\\DialogsContainer.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Sidebar\\Sidebar.tsx",["139","140","141"],"import bxChat from \"@iconify-icons/bx/bx-chat\";\r\nimport bxCog from \"@iconify-icons/bx/bx-cog\";\r\nimport bxGridAlt from \"@iconify-icons/bx/bx-grid-alt\";\r\nimport bxHeart from \"@iconify-icons/bx/bx-heart\";\r\nimport bxLogOut from \"@iconify-icons/bx/bx-log-out\";\r\nimport bxNews from \"@iconify-icons/bx/bx-news\";\r\nimport bxSearch from \"@iconify-icons/bx/bx-search\";\r\nimport bxUser from \"@iconify-icons/bx/bx-user\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport '../../main.css';\r\nimport { logout } from \"../../redux/auth-reducer\";\r\nimport { withAuthToRedirect } from \"../hoc/withAuthToRedirect\";\r\n\r\ntype SidebarPropsType = {\r\n    logout: () => void\r\n}\r\n\r\nconst Sidebar: React.FC<SidebarPropsType> = props => {\r\n\r\n    const logoutFn = () => {\r\n        props.logout()\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"sidebar active\">\r\n                <div className=\"logo__content\">\r\n                    <div className=\"logo\">\r\n                        <h4>Social-Network</h4>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"nav__list\">\r\n                    <li>\r\n                        <Icon icon={bxSearch} />\r\n                        <input className=\"sidebar__input\" type=\"text\" placeholder=\"Search...\" />\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/profile\">\r\n                            <Icon icon={bxGridAlt} />\r\n                            <span className=\"links__name\">Profile</span>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/users\">\r\n                            <Icon icon={bxUser} />\r\n                            <span className=\"links__name\">Users</span>\r\n                        </NavLink>\r\n                        <span className=\"tooltip\">Users</span>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/usersPosts\">\r\n                            <Icon icon={bxNews} />\r\n                            <span className=\"links__name\">Posts</span>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/dialogs\">\r\n                            <Icon icon={bxChat} />\r\n                            <span className=\"links__name\">Messages</span>\r\n                        </NavLink>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <NavLink to=\"/saved\">\r\n                            <Icon icon={bxHeart} />\r\n                            <span className=\"links__name\">Saved</span>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#\">\r\n                            <Icon icon={bxCog} />\r\n                            <span className=\"links__name\">Setting</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"profile__content\">\r\n                    <div className=\"profile\">\r\n                        <div className=\"profile__details\">\r\n                            <img />\r\n                        </div>\r\n                        <a id=\"log_out\" onClick={logoutFn}>\r\n                            <Icon icon={bxLogOut} />\r\n                            log out\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\ntype MapDispatchToPropsType = {\r\n    logout: () => void\r\n}\r\n\r\ntype PropsType = MapDispatchToPropsType\r\n\r\nconst SidebarContainer: React.FC<PropsType> = (props) => {\r\n    return <Sidebar logout={props.logout} />\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthToRedirect,\r\n    connect(null, { logout })\r\n)(SidebarContainer) as React.ComponentType","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\app-reducer.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\posts-reducer.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\api\\users-api.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\api\\api.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\App.tsx",["142","143"],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\LoginPage\\Login.tsx",["144","145"],"import React, { useState } from 'react'\r\nimport './Login.css'\r\nimport { login, logout } from '../../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { useFormik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport { AppStateType } from '../../../redux/redux-store'\r\n\r\ntype MapStateToPropsType = {\r\n\tisAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n\tlogin: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\ntype PropsType = {}\r\n\t\r\nconst Login: React.FC<MapStateToPropsType & MapDispatchToPropsType & PropsType> = ({ login, isAuth }) => {\r\n\tconst validationSchema = yup.object({\r\n\t\temail: yup.string().required('Email is required'),\r\n\t\tpassword: yup.string().required('Password is required'),\r\n\t})\r\n\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\trememberMe: false,\r\n\t\t},\r\n\t\tonSubmit: values => {\r\n\t\t\tconsole.log(values.email, values.password, values.rememberMe)\r\n\t\t\tlogin(values.email, values.password, values.rememberMe)\r\n\t\t},\r\n\t\tvalidationSchema: validationSchema,\r\n\t})\r\n\r\n\tconst emailValidation = formik.touched.email && formik.errors.email\r\n\tconst passwordValidation = formik.touched.password && formik.errors.password\r\n\r\n\tif (isAuth) {\r\n\t\treturn <Redirect to={'/profile'} />\r\n\t}\r\n\treturn (\r\n\t\t<div className='body'>\r\n\t\t\t<div className='container__login'>\r\n\t\t\t\t<input type='checkbox' id='flip' />\r\n\t\t\t\t<div className='cover'>\r\n\t\t\t\t\t<div className='front'>\r\n\t\t\t\t\t\t<div className='text'>\r\n\t\t\t\t\t\t\t<span className='text-1'>\r\n\t\t\t\t\t\t\t\tEvery new friend is a <br /> new adventure\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className='text-2'>Let's get connected</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='back'>\r\n\t\t\t\t\t\t<div className='text'>\r\n\t\t\t\t\t\t\t<span className='text-1'>\r\n\t\t\t\t\t\t\t\tComplete miles of journey <br /> with one step\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className='text-2'>Let's get started</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<form onSubmit={formik.handleSubmit}>\r\n\t\t\t\t\t<div className='form-content'>\r\n\t\t\t\t\t\t<div className='login-form'>\r\n\t\t\t\t\t\t\t<div className='title'>Login</div>\r\n\t\t\t\t\t\t\t<div className='input-boxes'>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={emailValidation ? 'input-box error' : 'input-box'}>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter your email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.email}\r\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={formik.handleBlur}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{emailValidation && (\r\n\t\t\t\t\t\t\t\t\t<p className='error'>{formik.errors.email}</p>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\tpasswordValidation ? 'input-box error' : 'input-box'\r\n\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter your password'\r\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.password}\r\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{passwordValidation && (\r\n\t\t\t\t\t\t\t\t\t<p className='error'>{formik.errors.password}</p>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t<label className='checkbox-box' htmlFor='rememberMe'>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tid='rememberMe'\r\n\t\t\t\t\t\t\t\t\t\tname='rememberMe'\r\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.rememberMe.toString()}\r\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<span className='label'>Remember me</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<div className='button input-box'>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-outline-dark w-100'\r\n\t\t\t\t\t\t\t\t\t\tdisabled={!formik.isValid && !formik.dirty}>\r\n\t\t\t\t\t\t\t\t\t\tLog in\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n\tisAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login)\r\n","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\PostsPage\\PostsPage.tsx",["146","147"],"import React, { useEffect, useState } from \"react\";\r\nimport { actions, getPosts } from \"../../../redux/posts-reducer\";\r\nimport './user-post.css'\r\nimport { AppStateType } from \"../../../redux/redux-store\";\r\nimport { connect } from \"react-redux\";\r\nimport { PostType } from \"../../../types/types\";\r\nimport { UserPost } from \"./UserPost\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\n\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostType>\r\n    totalCount: number\r\n}\r\ntype MapDispatchToPropsType = {\r\n    getPosts: (page: number) => Promise<void>\r\n    changeLike: (userId: string) => void\r\n}\r\n\r\nconst PostsPage: React.FC<MapStateToPropsType & MapDispatchToPropsType> = ({ getPosts, posts, changeLike, totalCount }) => {\r\n    const [page, setPage] = useState(0);\r\n    const [isFetching, setIsFetching] = useState(true);\r\n\r\n    //because the second page throws an error\r\n    if (page === 2) {\r\n        setPage(3)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isFetching) {\r\n            getPosts(page)\r\n                .then(() => setPage(prevState => prevState + 1))\r\n                .finally(() => {\r\n                    setIsFetching(false)\r\n                })\r\n        }\r\n    }, [isFetching])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('scroll', scrollHandler)\r\n        return function () {\r\n            document.removeEventListener('scroll', scrollHandler)\r\n        }\r\n    }, [])\r\n\r\n    const scrollHandler = (e: Event) => {\r\n        // @ts-ignore\r\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100 && posts.length <= totalCount) {\r\n            setIsFetching(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h3 className=\" text-left mt-3 mb-5\">Posts</h3>\r\n            <div className=\"row\">\r\n                {posts.length\r\n                    ?\r\n                    <>\r\n                        <UserPost posts={posts} changeLike={changeLike} />\r\n                    </>\r\n                    :\r\n                    <Preloader />\r\n                }\r\n            </div>\r\n            {isFetching ? <Preloader /> : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    posts: state.postsPage.posts,\r\n    totalCount: state.postsPage.totalCount\r\n})\r\nexport default connect(mapStateToProps, {\r\n    getPosts,\r\n    changeLike: actions.changeLike,\r\n    setPosts: actions.setPosts\r\n})(PostsPage)","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\SavedPage\\SavedPage.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\dialogs-reducer.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\UsersPage\\Users.tsx",["148","149"],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Paginator\\Paginator.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\UsersPage\\UsersPage.tsx",["150"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { getUsers } from \"../../../redux/users-reducer\";\r\nimport {\r\n    getCurrentPage, getPageSize\r\n} from \"../../../redux/selectors/users-selectors\";\r\nimport { withAuthToRedirect } from \"../../hoc/withAuthToRedirect\";\r\nimport Users from \"./Users\";\r\n\r\n\r\nconst UsersPage: React.FC = () => {\r\n    const pageSize = useSelector(getPageSize)\r\n    const currentPage = useSelector(getCurrentPage)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers(currentPage, pageSize))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Users\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    withAuthToRedirect\r\n)(UsersPage) as React.ComponentType\r\n","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\selectors\\users-selectors.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\selectors\\auth-selectors.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\profile-reducer.ts",["151"],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":10,"column":6,"nodeType":"158","messageId":"159","endLine":10,"endColumn":25},{"ruleId":"156","severity":1,"message":"160","line":15,"column":6,"nodeType":"158","messageId":"159","endLine":15,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":73,"column":25,"nodeType":"163","endLine":73,"endColumn":37},{"ruleId":"164","severity":1,"message":"165","line":82,"column":29,"nodeType":"163","endLine":82,"endColumn":36},{"ruleId":"161","severity":1,"message":"166","line":84,"column":25,"nodeType":"163","endLine":84,"endColumn":60},{"ruleId":"167","severity":1,"message":"168","line":17,"column":7,"nodeType":"158","messageId":"169","endLine":17,"endColumn":18},{"ruleId":"170","severity":1,"message":"171","line":29,"column":8,"nodeType":"172","endLine":29,"endColumn":10,"suggestions":"173"},{"ruleId":"156","severity":1,"message":"174","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"175","line":3,"column":17,"nodeType":"158","messageId":"159","endLine":3,"endColumn":23},{"ruleId":"170","severity":1,"message":"176","line":36,"column":8,"nodeType":"172","endLine":36,"endColumn":20,"suggestions":"177"},{"ruleId":"170","severity":1,"message":"178","line":43,"column":8,"nodeType":"172","endLine":43,"endColumn":10,"suggestions":"179"},{"ruleId":"156","severity":1,"message":"180","line":3,"column":29,"nodeType":"158","messageId":"159","endLine":3,"endColumn":35},{"ruleId":"156","severity":1,"message":"181","line":3,"column":37,"nodeType":"158","messageId":"159","endLine":3,"endColumn":45},{"ruleId":"170","severity":1,"message":"182","line":20,"column":8,"nodeType":"172","endLine":20,"endColumn":10,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":24,"column":70,"nodeType":"186","messageId":"187","endLine":24,"endColumn":78,"fix":"188"},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"@typescript-eslint/no-unused-vars","'MapStateToPropsType' is defined but never used.","Identifier","unusedVar","'MapDispatchToPropsType' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","@typescript-eslint/no-redeclare","'ProfilePage' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["191"],"'useState' is defined but never used.","'logout' is defined but never used.","React Hook useEffect has missing dependencies: 'getPosts' and 'page'. Either include them or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["192"],"React Hook useEffect has a missing dependency: 'scrollHandler'. Either include it or remove the dependency array.",["193"],"'follow' is defined but never used.","'unfollow' is defined but never used.","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', and 'pageSize'. Either include them or remove the dependency array.",["194"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"195","text":"196"},"no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},[892,892],"()","Update the dependencies array to be: [props]",{"range":"205","text":"206"},"Update the dependencies array to be: [getPosts, isFetching, page]",{"range":"207","text":"208"},"Update the dependencies array to be: [scrollHandler]",{"range":"209","text":"210"},"Update the dependencies array to be: [currentPage, dispatch, pageSize]",{"range":"211","text":"212"},[1278,1280],"[props]",[1186,1198],"[getPosts, isFetching, page]",[1401,1403],"[scrollHandler]",[647,649],"[currentPage, dispatch, pageSize]"]