[{"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\posts-reducer.ts":"1","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\DialogsPage\\Dialogs.tsx":"2","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\users-reducer.ts":"3","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Sidebar\\Sidebar.tsx":"4","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\FriendsPage\\FriendsPage.tsx":"5","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\UsersPage\\Users.tsx":"6","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\Profile.tsx":"7","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\ProfileStatus.tsx":"8","D:\\Programming\\GitHub\\Social-Network\\src\\index.tsx":"9","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\SavedPage\\LikedPost.tsx":"10","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\UserContactsCompnent..tsx":"11","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\MyPosts\\PostForm.tsx":"12","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Paginator\\Paginator.tsx":"13","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\MyPosts\\Post.tsx":"14","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\ProfilePage.tsx":"15","D:\\Programming\\GitHub\\Social-Network\\src\\api\\profile-api.ts":"16","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\UsersPage\\User.tsx":"17","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\SocialLinksComponent.tsx":"18","D:\\Programming\\GitHub\\Social-Network\\src\\App.tsx":"19","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\dialogs-reducer.ts":"20","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\ProfileInEditMode.tsx":"21","D:\\Programming\\GitHub\\Social-Network\\src\\components\\FooterMobile\\FooterMobile.tsx":"22","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\PostsPage\\PostsPage.tsx":"23","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\LoginPage\\Login.tsx":"24","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\SavedPage\\SavedPage.tsx":"25","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\UsersPage\\UsersPage.tsx":"26","D:\\Programming\\GitHub\\Social-Network\\src\\api\\users-api.ts":"27","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\selectors\\users-selectors.ts":"28","D:\\Programming\\GitHub\\Social-Network\\src\\components\\hoc\\withAuthToRedirect.tsx":"29","D:\\Programming\\GitHub\\Social-Network\\src\\api\\api.ts":"30","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\selectors\\posts-selectors.ts":"31","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\PostsPage\\UserPost.tsx":"32","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Preloader\\Preloader.tsx":"33","D:\\Programming\\GitHub\\Social-Network\\src\\api\\posts-api.ts":"34","D:\\Programming\\GitHub\\Social-Network\\src\\api\\auth-api.ts":"35","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\selectors\\auth-selectors.ts":"36","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\MyPosts\\MyPostsComponent.tsx":"37","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\ProfileOwnerContentComponent.tsx":"38","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\DialogsPage\\DialogsContainer.ts":"39"},{"size":3528,"mtime":1629035090849,"results":"40","hashOfConfig":"41"},{"size":4536,"mtime":1633049190417,"results":"42","hashOfConfig":"41"},{"size":5034,"mtime":1629037014177,"results":"43","hashOfConfig":"41"},{"size":3293,"mtime":1629036441970,"results":"44","hashOfConfig":"41"},{"size":3479,"mtime":1629050118111,"results":"45","hashOfConfig":"41"},{"size":3673,"mtime":1633046292384,"results":"46","hashOfConfig":"41"},{"size":3815,"mtime":1629043329122,"results":"47","hashOfConfig":"41"},{"size":2082,"mtime":1629038320010,"results":"48","hashOfConfig":"41"},{"size":465,"mtime":1629045719593,"results":"49","hashOfConfig":"41"},{"size":3023,"mtime":1628082663890,"results":"50","hashOfConfig":"41"},{"size":1884,"mtime":1627846536986,"results":"51","hashOfConfig":"41"},{"size":1430,"mtime":1627912133630,"results":"52","hashOfConfig":"41"},{"size":1596,"mtime":1633049748968,"results":"53","hashOfConfig":"41"},{"size":1937,"mtime":1628090489678,"results":"54","hashOfConfig":"41"},{"size":1987,"mtime":1628522042380,"results":"55","hashOfConfig":"41"},{"size":1295,"mtime":1627921459948,"results":"56","hashOfConfig":"41"},{"size":1759,"mtime":1628082423046,"results":"57","hashOfConfig":"41"},{"size":5634,"mtime":1629045848898,"results":"58","hashOfConfig":"41"},{"size":2515,"mtime":1633049064635,"results":"59","hashOfConfig":"41"},{"size":1298,"mtime":1627846536991,"results":"60","hashOfConfig":"41"},{"size":6509,"mtime":1627846536985,"results":"61","hashOfConfig":"41"},{"size":2641,"mtime":1629048561632,"results":"62","hashOfConfig":"41"},{"size":2224,"mtime":1633048370774,"results":"63","hashOfConfig":"41"},{"size":5356,"mtime":1629049987460,"results":"64","hashOfConfig":"41"},{"size":1033,"mtime":1628089607353,"results":"65","hashOfConfig":"41"},{"size":924,"mtime":1633046125040,"results":"66","hashOfConfig":"41"},{"size":782,"mtime":1628768157319,"results":"67","hashOfConfig":"41"},{"size":664,"mtime":1627846536994,"results":"68","hashOfConfig":"41"},{"size":951,"mtime":1627846536989,"results":"69","hashOfConfig":"41"},{"size":420,"mtime":1627846536980,"results":"70","hashOfConfig":"41"},{"size":447,"mtime":1627846536993,"results":"71","hashOfConfig":"41"},{"size":3317,"mtime":1633049210266,"results":"72","hashOfConfig":"41"},{"size":219,"mtime":1627846536989,"results":"73","hashOfConfig":"41"},{"size":372,"mtime":1628934192109,"results":"74","hashOfConfig":"41"},{"size":643,"mtime":1627846536980,"results":"75","hashOfConfig":"41"},{"size":230,"mtime":1627846536993,"results":"76","hashOfConfig":"41"},{"size":1036,"mtime":1629038320022,"results":"77","hashOfConfig":"41"},{"size":1626,"mtime":1628089805294,"results":"78","hashOfConfig":"41"},{"size":646,"mtime":1627846536981,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1qd71l2",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"97"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"97"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\posts-reducer.ts",[],["171","172"],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\DialogsPage\\Dialogs.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\users-reducer.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Sidebar\\Sidebar.tsx",["173","174","175","176"],"import bxChat from '@iconify-icons/bx/bx-chat'\r\nimport bxCog from '@iconify-icons/bx/bx-cog'\r\nimport bxGridAlt from '@iconify-icons/bx/bx-grid-alt'\r\nimport bxHeart from '@iconify-icons/bx/bx-heart'\r\nimport bxLogOut from '@iconify-icons/bx/bx-log-out'\r\nimport bxNews from '@iconify-icons/bx/bx-news'\r\nimport bxSearch from '@iconify-icons/bx/bx-search'\r\nimport bxUser from '@iconify-icons/bx/bx-user'\r\nimport bxFriends from '@iconify-icons/bx/bx-user-check'\r\nimport {Icon} from '@iconify/react'\r\nimport React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {compose} from 'redux'\r\nimport '../../main.scss'\r\nimport {logout} from '../../redux/auth-reducer'\r\nimport {withAuthToRedirect} from '../hoc/withAuthToRedirect'\r\n\r\n\r\nconst Sidebar: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const logoutFn = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"sidebar active\">\r\n                <ul className=\"nav__list\">\r\n                    <li>\r\n                        <NavLink to=\"/profile\">\r\n                            <Icon icon={bxGridAlt}/>\r\n                            <span className=\"links__name\">Profile</span>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/users\">\r\n                            <Icon icon={bxUser}/>\r\n                            <span className=\"links__name\">Users</span>\r\n                        </NavLink>\r\n                        <span className=\"tooltip\">Users</span>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/friends\">\r\n                            <Icon icon={bxFriends} />\r\n                            <span className=\"links__name\">Friends</span>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/usersPosts\">\r\n                            <Icon icon={bxNews}/>\r\n                            <span className=\"links__name\">Posts</span>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/dialogs\">\r\n                            <Icon icon={bxChat}/>\r\n                            <span className=\"links__name\">Messages</span>\r\n                        </NavLink>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <NavLink to=\"/saved\">\r\n                            <Icon icon={bxHeart}/>\r\n                            <span className=\"links__name\">Saved</span>\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"profile__content\">\r\n                    <div className=\"profile\">\r\n                        <div className=\"profile__details\">\r\n                            <img/>\r\n                        </div>\r\n                        <a id=\"log_out\" onClick={logoutFn}>\r\n                            <Icon icon={bxLogOut}/>\r\n                            log out\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthToRedirect,\r\n)(Sidebar) as React.ComponentType",["177","178"],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\FriendsPage\\FriendsPage.tsx",["179"],"import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {follow, unfollow} from '../../../redux/users-reducer'\r\nimport {getFollowingInProgress, getIsFetching,} from '../../../redux/selectors/users-selectors'\r\nimport Preloader from '../../Preloader/Preloader'\r\nimport {Col, Container, Row} from 'react-bootstrap'\r\nimport {AppStateType} from '../../../redux/redux-store'\r\nimport User from '../UsersPage/User'\r\nimport {motion} from 'framer-motion'\r\n\r\n\r\nconst FriendsPage: React.FC = () => {\r\n    const friends = useSelector((state: AppStateType) => state.usersPage.friends)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n    const isFetching = useSelector(getIsFetching)\r\n    const [screenWidth, setScreenWidth] = useState(document.documentElement.clientWidth)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => {\r\n            setScreenWidth(document.documentElement.clientWidth)\r\n        })\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('friends', JSON.stringify(friends))\r\n    }, [friends])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onFollow = (userId: number) => {\r\n        dispatch(follow(userId))\r\n    }\r\n    const onUnfollow = (userId: number) => {\r\n        dispatch(unfollow(userId))\r\n    }\r\n    return (\r\n        <motion.div\r\n            className='container'\r\n            initial={{opacity: 0}}\r\n            animate={{opacity: 1, transition: {duration: 0.4}}}\r\n            exit={{opacity: 0}}>\r\n            <Container fluid>\r\n                <h3 className=\" text-left mt-3 mb-5\">Friends</h3>\r\n                {friends.length\r\n                    ?\r\n                    <>\r\n                        {isFetching ? <Preloader/> : null}\r\n\r\n                        <Row>\r\n                            <Col className=\"content-mobile\">\r\n                                <Container fluid>\r\n                                    <Row className=\"user-table__row\">\r\n                                        <Col className=\"user-table__column\">\r\n                                            <span>User</span>\r\n                                        </Col>\r\n                                        <Col className=\"user-table__column user-id__title\">\r\n                                            <span>ID</span>\r\n                                        </Col>\r\n                                        <Col className=\"user-table__column\">\r\n                                            <span>Add</span>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                                <Row>\r\n                                    <Col>\r\n                                        {friends.map(u => <User key={u.id} user={u}\r\n                                                                followingInProgress={followingInProgress}\r\n                                                                onUnfollow={onUnfollow} onFollow={onFollow}/>)\r\n                                        }\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                    :\r\n                    <h3 className='posts__title'>You don't have any friends yet</h3>\r\n                }\r\n            </Container>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\n\r\nexport default FriendsPage\r\n",["180","181"],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\UsersPage\\Users.tsx",[],["182","183"],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\Profile.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\ProfileStatus.tsx",[],["184","185"],"D:\\Programming\\GitHub\\Social-Network\\src\\index.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\SavedPage\\LikedPost.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\UserContactsCompnent..tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\MyPosts\\PostForm.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Paginator\\Paginator.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\MyPosts\\Post.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\ProfilePage.tsx",["186","187"],"import { motion } from 'framer-motion'\r\nimport React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport {\r\n\tgetProfileStatus,\r\n\tgetUserProfile,\r\n} from '../../../redux/profile-reducer'\r\nimport { getAuthorizedUserId } from '../../../redux/selectors/auth-selectors'\r\nimport { withAuthToRedirect } from '../../hoc/withAuthToRedirect'\r\nimport Profile from './Profile'\r\n\r\ntype PathParamsType = {\r\n\tuserId: string\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType>\r\n\r\nconst ProfilePage: React.FC<PropsType> = props => {\r\n\tconst authorizedUserId = useSelector(getAuthorizedUserId)\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tlet userId: number | null = +props.match.params.userId\r\n\t\tif (!userId) {\r\n\t\t\tuserId = authorizedUserId\r\n\t\t}\r\n\t\tdispatch(getUserProfile(userId as number))\r\n\t\tdispatch(getProfileStatus(userId as number))\r\n\t}, [])\r\n\r\n\tconst usePrevious = (value: any) => {\r\n\t\tconst ref = useRef()\r\n\t\tuseEffect(() => {\r\n\t\t\tref.current = value\r\n\t\t})\r\n\t\treturn ref.current\r\n\t}\r\n\tconst prevUserId = usePrevious(props.match.params.userId)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.match.params.userId !== prevUserId) {\r\n\t\t\tlet userId: number | null = +props.match.params.userId\r\n\t\t\tif (!userId) {\r\n\t\t\t\tuserId = authorizedUserId\r\n\t\t\t}\r\n\t\t\tdispatch(getUserProfile(userId as number))\r\n\t\t\tdispatch(getProfileStatus(userId as number))\r\n\t\t}\r\n\t}, [props.match.params.userId])\r\n\r\n\treturn (\r\n\t\t<motion.div\r\n\t\t\tinitial={{ opacity: 0 }}\r\n\t\t\tanimate={{opacity: 1, transition: { duration: 0.4 } }}\r\n\t\t\texit={{ opacity: 0 }}>\r\n\t\t\t<Profile\r\n\t\t\t\tisOwner={\r\n\t\t\t\t\tprops.match.params.userId === undefined ||\r\n\t\t\t\t\tprops.match.params.userId === 'posts'\r\n\t\t\t\t}\r\n\t\t\t\tisNotPosts={props.match.params.userId !== 'posts'}\r\n\t\t\t/>\r\n\t\t</motion.div>\r\n\t)\r\n}\r\n\r\nexport default compose(\r\n\twithRouter,\r\n\twithAuthToRedirect\r\n)(ProfilePage) as React.ComponentType\r\n","D:\\Programming\\GitHub\\Social-Network\\src\\api\\profile-api.ts",["188"],"import { PhotosType, ProfileType } from \"../types/types\";\r\nimport {APIResponseType, instance, ResponseCode} from './api'\r\n\r\ntype SavePhotoResponseType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return (\r\n            instance.get<ProfileType>(`profile/` + userId)\r\n                .then(res => res.data)\r\n        )\r\n    },\r\n    getStatus(userId: number) {\r\n        return (\r\n            instance.get<string>(`profile/status/` + userId)\r\n                .then(res => res.data)\r\n        )\r\n    },\r\n    updateStatus(status: string) {\r\n        return (\r\n            instance.put<APIResponseType>(`profile/status/`, { status: status })\r\n                .then(res => res.data)\r\n        )\r\n    },\r\n    savePhoto(photo: File) {\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photo)\r\n        return (\r\n            instance.put<APIResponseType<SavePhotoResponseType>>('profile/photo', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }))\r\n\r\n    },\r\n    saveProfile(profileInfo: any) {\r\n        return (\r\n            instance.put<APIResponseType>(`profile`, profileInfo)\r\n                .then(res => res.data)\r\n        )\r\n    }\r\n}\r\n\r\n","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\UsersPage\\User.tsx",["189"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport photo from '../../../images/user.png'\r\nimport { Icon } from '@iconify/react'\r\nimport bxTrash from '@iconify-icons/bx/bx-trash'\r\nimport bxAddToQueue from '@iconify-icons/bx/bx-add-to-queue'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Col, Row, Image } from 'react-bootstrap'\r\n\r\ntype PropsType = {\r\n\tuser: any\r\n\tfollowingInProgress: Array<number>\r\n\tonUnfollow: (userId: number) => void\r\n\tonFollow: (userId: number) => void\r\n}\r\n\r\nconst User: React.FC<PropsType> = ({\r\n\tuser,\r\n\tfollowingInProgress,\r\n\tonUnfollow,\r\n\tonFollow,\r\n}) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row className='user'>\r\n\t\t\t\t<Col className='user-info'>\r\n\t\t\t\t\t<NavLink className='user-link' to={'/profile/' + user.id}>\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tsrc={user.photos.small != null ? user.photos.small : photo}\r\n\t\t\t\t\t\t\troundedCircle\r\n\t\t\t\t\t\t\tclassName='user-img'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink className='user-link' to={'/profile/' + user.id}>\r\n\t\t\t\t\t\t{user.name}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col className='user-item user-id'>\r\n\t\t\t\t\t<NavLink to={'/profile/' + user.id}>{user.id}</NavLink>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col className='user-item user-add'>\r\n\t\t\t\t\t{user.followed ? (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tdisabled={followingInProgress.some(id => id === user.id)}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tonUnfollow(user.id)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tclassName='btn btn-danger'>\r\n\t\t\t\t\t\t\t<Icon icon={bxTrash} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tdisabled={followingInProgress.some(id => id === user.id)}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tonFollow(user.id)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tclassName='btn btn-dark'>\r\n\t\t\t\t\t\t\t<Icon icon={bxAddToQueue} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default User\r\n","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\SocialLinksComponent.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\App.tsx",["190"],"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\dialogs-reducer.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\ProfileInEditMode.tsx",["191"],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\FooterMobile\\FooterMobile.tsx",["192"],"import React from 'react'\r\nimport {NavLink, RouteComponentProps, withRouter} from 'react-router-dom'\r\nimport {Icon} from '@iconify/react'\r\nimport bxGridAlt from '@iconify-icons/bx/bx-grid-alt'\r\nimport bxUser from '@iconify-icons/bx/bx-user'\r\nimport bxNews from '@iconify-icons/bx/bx-news'\r\nimport bxChat from '@iconify-icons/bx/bx-chat'\r\nimport bxHeart from '@iconify-icons/bx/bx-heart'\r\nimport bxLogOut from '@iconify-icons/bx/bx-log-out'\r\nimport {useDispatch} from 'react-redux'\r\nimport {logout} from '../../redux/auth-reducer'\r\nimport bxFriends from '@iconify-icons/bx/bx-user-check'\r\n\r\nconst FooterMobile: React.FC<RouteComponentProps> = (props) => {\r\n    const dispatch = useDispatch()\r\n    const logoutFn = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <>\r\n            {props.location.pathname === '/login'\r\n                ?\r\n                ''\r\n                :\r\n                <footer className=\"footer-mobile\">\r\n                    <ul className=\"footer-mobile-items\">\r\n                        <li>\r\n                            <NavLink to=\"/profile\">\r\n                                <Icon icon={bxGridAlt}/>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/users\">\r\n                                <Icon icon={bxUser}/>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/friends\">\r\n                                <Icon icon={bxFriends} style={{fontSize: '28px'}}/>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/usersPosts\">\r\n                                <Icon icon={bxNews}/>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/dialogs\">\r\n                                <Icon icon={bxChat}/>\r\n                            </NavLink>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <NavLink to=\"/saved\">\r\n                                <Icon icon={bxHeart}/>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <a id=\"log_out\" onClick={logoutFn}>\r\n                                <Icon icon={bxLogOut}/>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </footer>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(FooterMobile)","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\PostsPage\\PostsPage.tsx",["193","194"],"import React, {useEffect, useState} from 'react'\r\nimport {getPosts} from '../../../redux/posts-reducer'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {UserPost} from './UserPost'\r\nimport Preloader from '../../Preloader/Preloader'\r\nimport {Row} from 'react-bootstrap'\r\nimport {getPostsData, getPostsTotalCount,} from '../../../redux/selectors/posts-selectors'\r\nimport {motion} from 'framer-motion'\r\n\r\nconst PostsPage: React.FC = () => {\r\n    const [page, setPage] = useState(0)\r\n    const [isFetching, setIsFetching] = useState(true)\r\n\r\n    const posts = useSelector(getPostsData)\r\n    const totalCount = useSelector(getPostsTotalCount)\r\n    const dispatch = useDispatch()\r\n    //because the second page throws an error\r\n    if (page === 2) {\r\n        setPage(3)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isFetching) {\r\n            dispatch(getPosts(page))\r\n                // @ts-ignore\r\n                .then(() => setPage(prevState => prevState + 1))\r\n                .finally(() => {\r\n                    setIsFetching(false)\r\n                })\r\n        }\r\n    }, [isFetching])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('scroll', scrollHandler)\r\n        return function () {\r\n            document.removeEventListener('scroll', scrollHandler)\r\n        }\r\n    }, [])\r\n\r\n    const scrollHandler = (e: Event) => {\r\n        // @ts-ignore\r\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100 &&\r\n            posts.length <= totalCount\r\n        ) {\r\n            setIsFetching(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            className='container'\r\n            initial={{opacity: 0}}\r\n            animate={{opacity: 1, transition: {duration: 0.4}}}\r\n            exit={{opacity: 0}}>\r\n            <h3 className='text-left mt-3 mb-5'>Posts</h3>\r\n            <Row>\r\n                {posts.length ? (\r\n                    <>\r\n                        <UserPost posts={posts}/>\r\n                    </>\r\n                ) : (\r\n                    <Preloader/>\r\n                )}\r\n            </Row>\r\n            {isFetching ? <Preloader/> : ''}\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default PostsPage\r\n","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\LoginPage\\Login.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\SavedPage\\SavedPage.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\UsersPage\\UsersPage.tsx",["195"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { getUsers } from '../../../redux/users-reducer'\r\nimport {\r\n\tgetCurrentPage,\r\n\tgetPageSize,\r\n} from '../../../redux/selectors/users-selectors'\r\nimport { withAuthToRedirect } from '../../hoc/withAuthToRedirect'\r\nimport Users from './Users'\r\nimport { motion } from 'framer-motion'\r\n\r\nconst UsersPage: React.FC = () => {\r\n\tconst pageSize = useSelector(getPageSize)\r\n\tconst currentPage = useSelector(getCurrentPage)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getUsers(currentPage, pageSize))\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<motion.div\r\n\t\t\tinitial={{ opacity: 0 }}\r\n\t\t\tanimate={{ opacity: 1, transition: { duration: 0.4 } }}\r\n\t\t\texit={{ opacity: 0 }}>\r\n\t\t\t<Users />\r\n\t\t</motion.div>\r\n\t)\r\n}\r\n\r\nexport default compose(withAuthToRedirect)(UsersPage) as React.ComponentType\r\n","D:\\Programming\\GitHub\\Social-Network\\src\\api\\users-api.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\selectors\\users-selectors.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\hoc\\withAuthToRedirect.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\api\\api.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\selectors\\posts-selectors.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\PostsPage\\UserPost.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Preloader\\Preloader.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\api\\posts-api.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\api\\auth-api.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\selectors\\auth-selectors.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\MyPosts\\MyPostsComponent.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\ProfileOwnerContentComponent.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\DialogsPage\\DialogsContainer.ts",[],{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":13},{"ruleId":"200","severity":1,"message":"204","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":16},{"ruleId":"205","severity":1,"message":"206","line":71,"column":29,"nodeType":"207","endLine":71,"endColumn":35},{"ruleId":"208","severity":1,"message":"209","line":73,"column":25,"nodeType":"207","endLine":73,"endColumn":60},{"ruleId":"196","replacedBy":"210"},{"ruleId":"198","replacedBy":"211"},{"ruleId":"200","severity":1,"message":"212","line":16,"column":12,"nodeType":"202","messageId":"203","endLine":16,"endColumn":23},{"ruleId":"196","replacedBy":"213"},{"ruleId":"198","replacedBy":"214"},{"ruleId":"196","replacedBy":"215"},{"ruleId":"198","replacedBy":"216"},{"ruleId":"196","replacedBy":"217"},{"ruleId":"198","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":31,"column":5,"nodeType":"221","endLine":31,"endColumn":7,"suggestions":"222"},{"ruleId":"219","severity":1,"message":"223","line":51,"column":5,"nodeType":"221","endLine":51,"endColumn":32,"suggestions":"224"},{"ruleId":"200","severity":1,"message":"225","line":2,"column":36,"nodeType":"202","messageId":"203","endLine":2,"endColumn":48},{"ruleId":"200","severity":1,"message":"226","line":7,"column":10,"nodeType":"202","messageId":"203","endLine":7,"endColumn":21},{"ruleId":"219","severity":1,"message":"227","line":33,"column":5,"nodeType":"221","endLine":33,"endColumn":7,"suggestions":"228"},{"ruleId":"219","severity":1,"message":"229","line":36,"column":8,"nodeType":"221","endLine":36,"endColumn":10,"suggestions":"230"},{"ruleId":"208","severity":1,"message":"209","line":59,"column":29,"nodeType":"207","endLine":59,"endColumn":64},{"ruleId":"219","severity":1,"message":"231","line":31,"column":8,"nodeType":"221","endLine":31,"endColumn":20,"suggestions":"232"},{"ruleId":"219","severity":1,"message":"233","line":38,"column":8,"nodeType":"221","endLine":38,"endColumn":10,"suggestions":"234"},{"ruleId":"219","severity":1,"message":"235","line":21,"column":5,"nodeType":"221","endLine":21,"endColumn":7,"suggestions":"236"},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"@typescript-eslint/no-unused-vars","'bxCog' is defined but never used.","Identifier","unusedVar","'bxSearch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["237"],["238"],"'screenWidth' is assigned a value but never used.",["237"],["238"],["237"],["238"],["237"],["238"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authorizedUserId', 'dispatch', and 'props.match.params.userId'. Either include them or remove the dependency array.","ArrayExpression",["239"],"React Hook useEffect has missing dependencies: 'authorizedUserId', 'dispatch', and 'prevUserId'. Either include them or remove the dependency array.",["240"],"'ResponseCode' is defined but never used.","'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["241"],"React Hook useEffect has missing dependencies: 'contacts' and 'profile'. Either include them or remove the dependency array. If 'setInputName' needs the current value of 'profile', you can also switch to useReducer instead of useState and read 'profile' in the reducer.",["242"],"React Hook useEffect has missing dependencies: 'dispatch' and 'page'. Either include them or remove the dependency array.",["243"],"React Hook useEffect has a missing dependency: 'scrollHandler'. Either include it or remove the dependency array.",["244"],"React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', and 'pageSize'. Either include them or remove the dependency array.",["245"],"no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [authorizedUserId, dispatch, props.match.params.userId]",{"range":"260","text":"261"},"Update the dependencies array to be: [authorizedUserId, dispatch, prevUserId, props.match.params.userId]",{"range":"262","text":"263"},"Update the dependencies array to be: [dispatch]",{"range":"264","text":"265"},"Update the dependencies array to be: [contacts, profile]",{"range":"266","text":"267"},"Update the dependencies array to be: [dispatch, isFetching, page]",{"range":"268","text":"269"},"Update the dependencies array to be: [scrollHandler]",{"range":"270","text":"271"},"Update the dependencies array to be: [currentPage, dispatch, pageSize]",{"range":"272","text":"273"},[997,999],"[authorizedUserId, dispatch, props.match.params.userId]",[1498,1525],"[authorizedUserId, dispatch, prevUserId, props.match.params.userId]",[1360,1362],"[dispatch]",[1335,1337],"[contacts, profile]",[1087,1099],"[dispatch, isFetching, page]",[1302,1304],"[scrollHandler]",[657,659],"[currentPage, dispatch, pageSize]"]