[{"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\posts-reducer.ts":"1","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\DialogsPage\\Dialogs.tsx":"2","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\users-reducer.ts":"3","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Sidebar\\Sidebar.tsx":"4","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\FriendsPage\\FriendsPage.tsx":"5","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\UsersPage\\Users.tsx":"6","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\Profile.tsx":"7","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\ProfileStatus.tsx":"8","D:\\Programming\\GitHub\\Social-Network\\src\\index.tsx":"9","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\SavedPage\\LikedPost.tsx":"10","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\UserContactsCompnent..tsx":"11","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\MyPosts\\PostForm.tsx":"12","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Paginator\\Paginator.tsx":"13","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\MyPosts\\Post.tsx":"14","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\ProfilePage.tsx":"15","D:\\Programming\\GitHub\\Social-Network\\src\\api\\profile-api.ts":"16","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\UsersPage\\User.tsx":"17","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\SocialLinksComponent.tsx":"18","D:\\Programming\\GitHub\\Social-Network\\src\\App.tsx":"19","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\dialogs-reducer.ts":"20","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\ProfileInEditMode.tsx":"21","D:\\Programming\\GitHub\\Social-Network\\src\\components\\FooterMobile\\FooterMobile.tsx":"22","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\PostsPage\\PostsPage.tsx":"23","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\LoginPage\\Login.tsx":"24","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\SavedPage\\SavedPage.tsx":"25","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\UsersPage\\UsersPage.tsx":"26","D:\\Programming\\GitHub\\Social-Network\\src\\api\\users-api.ts":"27","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\selectors\\users-selectors.ts":"28","D:\\Programming\\GitHub\\Social-Network\\src\\components\\hoc\\withAuthToRedirect.tsx":"29","D:\\Programming\\GitHub\\Social-Network\\src\\api\\api.ts":"30","D:\\Programming\\GitHub\\Social-Network\\src\\redux\\selectors\\posts-selectors.ts":"31","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\PostsPage\\UserPost.tsx":"32"},{"size":3528,"mtime":1629035090849,"results":"33","hashOfConfig":"34"},{"size":4456,"mtime":1628934935646,"results":"35","hashOfConfig":"34"},{"size":5034,"mtime":1629037014177,"results":"36","hashOfConfig":"34"},{"size":3293,"mtime":1629036441970,"results":"37","hashOfConfig":"34"},{"size":2803,"mtime":1629038320016,"results":"38","hashOfConfig":"34"},{"size":3593,"mtime":1629026009653,"results":"39","hashOfConfig":"34"},{"size":3815,"mtime":1629043329122,"results":"40","hashOfConfig":"34"},{"size":2082,"mtime":1629038320010,"results":"41","hashOfConfig":"34"},{"size":465,"mtime":1629045719593,"results":"42","hashOfConfig":"34"},{"size":3023,"mtime":1628082663890,"results":"43","hashOfConfig":"34"},{"size":1884,"mtime":1627846536986,"results":"44","hashOfConfig":"34"},{"size":1430,"mtime":1627912133630,"results":"45","hashOfConfig":"34"},{"size":1777,"mtime":1629046143653,"results":"46","hashOfConfig":"34"},{"size":1937,"mtime":1628090489678,"results":"47","hashOfConfig":"34"},{"size":1987,"mtime":1628522042380,"results":"48","hashOfConfig":"34"},{"size":1295,"mtime":1627921459948,"results":"49","hashOfConfig":"34"},{"size":1759,"mtime":1628082423046,"results":"50","hashOfConfig":"34"},{"size":5634,"mtime":1629045848898,"results":"51","hashOfConfig":"34"},{"size":2326,"mtime":1629045634737,"results":"52","hashOfConfig":"34"},{"size":1298,"mtime":1627846536991,"results":"53","hashOfConfig":"34"},{"size":6509,"mtime":1627846536985,"results":"54","hashOfConfig":"34"},{"size":2086,"mtime":1629045433367,"results":"55","hashOfConfig":"34"},{"size":2224,"mtime":1629038320004,"results":"56","hashOfConfig":"34"},{"size":5405,"mtime":1629038319992,"results":"57","hashOfConfig":"34"},{"size":1033,"mtime":1628089607353,"results":"58","hashOfConfig":"34"},{"size":926,"mtime":1628089446248,"results":"59","hashOfConfig":"34"},{"size":782,"mtime":1628768157319,"results":"60","hashOfConfig":"34"},{"size":664,"mtime":1627846536994,"results":"61","hashOfConfig":"34"},{"size":951,"mtime":1627846536989,"results":"62","hashOfConfig":"34"},{"size":420,"mtime":1627846536980,"results":"63","hashOfConfig":"34"},{"size":447,"mtime":1627846536993,"results":"64","hashOfConfig":"34"},{"size":3319,"mtime":1628081463875,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1qd71l2",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"71"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"71"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"71"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"71"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\posts-reducer.ts",[],["140","141"],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\DialogsPage\\Dialogs.tsx",[],["142","143"],"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\users-reducer.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Sidebar\\Sidebar.tsx",["144","145","146","147"],"import bxChat from '@iconify-icons/bx/bx-chat'\r\nimport bxCog from '@iconify-icons/bx/bx-cog'\r\nimport bxGridAlt from '@iconify-icons/bx/bx-grid-alt'\r\nimport bxHeart from '@iconify-icons/bx/bx-heart'\r\nimport bxLogOut from '@iconify-icons/bx/bx-log-out'\r\nimport bxNews from '@iconify-icons/bx/bx-news'\r\nimport bxSearch from '@iconify-icons/bx/bx-search'\r\nimport bxUser from '@iconify-icons/bx/bx-user'\r\nimport bxFriends from '@iconify-icons/bx/bx-user-check'\r\nimport {Icon} from '@iconify/react'\r\nimport React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {compose} from 'redux'\r\nimport '../../main.scss'\r\nimport {logout} from '../../redux/auth-reducer'\r\nimport {withAuthToRedirect} from '../hoc/withAuthToRedirect'\r\n\r\n\r\nconst Sidebar: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const logoutFn = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"sidebar active\">\r\n                <ul className=\"nav__list\">\r\n                    <li>\r\n                        <NavLink to=\"/profile\">\r\n                            <Icon icon={bxGridAlt}/>\r\n                            <span className=\"links__name\">Profile</span>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/users\">\r\n                            <Icon icon={bxUser}/>\r\n                            <span className=\"links__name\">Users</span>\r\n                        </NavLink>\r\n                        <span className=\"tooltip\">Users</span>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/friends\">\r\n                            <Icon icon={bxFriends} />\r\n                            <span className=\"links__name\">Friends</span>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/usersPosts\">\r\n                            <Icon icon={bxNews}/>\r\n                            <span className=\"links__name\">Posts</span>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/dialogs\">\r\n                            <Icon icon={bxChat}/>\r\n                            <span className=\"links__name\">Messages</span>\r\n                        </NavLink>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <NavLink to=\"/saved\">\r\n                            <Icon icon={bxHeart}/>\r\n                            <span className=\"links__name\">Saved</span>\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"profile__content\">\r\n                    <div className=\"profile\">\r\n                        <div className=\"profile__details\">\r\n                            <img/>\r\n                        </div>\r\n                        <a id=\"log_out\" onClick={logoutFn}>\r\n                            <Icon icon={bxLogOut}/>\r\n                            log out\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthToRedirect,\r\n)(Sidebar) as React.ComponentType","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\FriendsPage\\FriendsPage.tsx",["148"],"import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {follow, unfollow} from '../../../redux/users-reducer'\r\nimport {getFollowingInProgress, getIsFetching,} from '../../../redux/selectors/users-selectors'\r\nimport Preloader from '../../Preloader/Preloader'\r\nimport {Col, Container, Row} from 'react-bootstrap'\r\nimport {AppStateType} from '../../../redux/redux-store'\r\nimport User from '../UsersPage/User'\r\n\r\n\r\nconst FriendsPage: React.FC = () => {\r\n    const friends = useSelector((state: AppStateType) => state.usersPage.friends)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n    const isFetching = useSelector(getIsFetching)\r\n    const [screenWidth, setScreenWidth] = useState(document.documentElement.clientWidth)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => {\r\n            setScreenWidth(document.documentElement.clientWidth)\r\n        })\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('friends', JSON.stringify(friends))\r\n    }, [friends])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onFollow = (userId: number) => {\r\n        dispatch(follow(userId))\r\n    }\r\n    const onUnfollow = (userId: number) => {\r\n        dispatch(unfollow(userId))\r\n    }\r\n    return (\r\n        <>\r\n            {isFetching ? <Preloader/> : null}\r\n            <Container fluid>\r\n                <h3 className=\" text-left mt-3 mb-5\">Friends</h3>\r\n                <Row>\r\n                    <Col className=\"content-mobile\">\r\n                        <Container fluid>\r\n                            <Row className=\"user-table__row\">\r\n                                <Col className=\"user-table__column\">\r\n                                    <span>User</span>\r\n                                </Col>\r\n                                <Col className=\"user-table__column user-id__title\">\r\n                                    <span>ID</span>\r\n                                </Col>\r\n                                <Col className=\"user-table__column\">\r\n                                    <span>Add</span>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                        <Row>\r\n                            <Col>\r\n                                {friends.map(u => <User key={u.id} user={u}\r\n                                                      followingInProgress={followingInProgress}\r\n                                                      onUnfollow={onUnfollow} onFollow={onFollow}/>)\r\n                                }\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default FriendsPage\r\n","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\UsersPage\\Users.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\Profile.tsx",[],["149","150"],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\ProfileStatus.tsx",[],["151","152"],"D:\\Programming\\GitHub\\Social-Network\\src\\index.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\SavedPage\\LikedPost.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\UserContactsCompnent..tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\MyPosts\\PostForm.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Paginator\\Paginator.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\MyPosts\\Post.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\ProfilePage.tsx",["153","154"],"import { motion } from 'framer-motion'\r\nimport React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport {\r\n\tgetProfileStatus,\r\n\tgetUserProfile,\r\n} from '../../../redux/profile-reducer'\r\nimport { getAuthorizedUserId } from '../../../redux/selectors/auth-selectors'\r\nimport { withAuthToRedirect } from '../../hoc/withAuthToRedirect'\r\nimport Profile from './Profile'\r\n\r\ntype PathParamsType = {\r\n\tuserId: string\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType>\r\n\r\nconst ProfilePage: React.FC<PropsType> = props => {\r\n\tconst authorizedUserId = useSelector(getAuthorizedUserId)\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tlet userId: number | null = +props.match.params.userId\r\n\t\tif (!userId) {\r\n\t\t\tuserId = authorizedUserId\r\n\t\t}\r\n\t\tdispatch(getUserProfile(userId as number))\r\n\t\tdispatch(getProfileStatus(userId as number))\r\n\t}, [])\r\n\r\n\tconst usePrevious = (value: any) => {\r\n\t\tconst ref = useRef()\r\n\t\tuseEffect(() => {\r\n\t\t\tref.current = value\r\n\t\t})\r\n\t\treturn ref.current\r\n\t}\r\n\tconst prevUserId = usePrevious(props.match.params.userId)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.match.params.userId !== prevUserId) {\r\n\t\t\tlet userId: number | null = +props.match.params.userId\r\n\t\t\tif (!userId) {\r\n\t\t\t\tuserId = authorizedUserId\r\n\t\t\t}\r\n\t\t\tdispatch(getUserProfile(userId as number))\r\n\t\t\tdispatch(getProfileStatus(userId as number))\r\n\t\t}\r\n\t}, [props.match.params.userId])\r\n\r\n\treturn (\r\n\t\t<motion.div\r\n\t\t\tinitial={{ opacity: 0 }}\r\n\t\t\tanimate={{opacity: 1, transition: { duration: 0.4 } }}\r\n\t\t\texit={{ opacity: 0 }}>\r\n\t\t\t<Profile\r\n\t\t\t\tisOwner={\r\n\t\t\t\t\tprops.match.params.userId === undefined ||\r\n\t\t\t\t\tprops.match.params.userId === 'posts'\r\n\t\t\t\t}\r\n\t\t\t\tisNotPosts={props.match.params.userId !== 'posts'}\r\n\t\t\t/>\r\n\t\t</motion.div>\r\n\t)\r\n}\r\n\r\nexport default compose(\r\n\twithRouter,\r\n\twithAuthToRedirect\r\n)(ProfilePage) as React.ComponentType\r\n","D:\\Programming\\GitHub\\Social-Network\\src\\api\\profile-api.ts",["155"],"import { PhotosType, ProfileType } from \"../types/types\";\r\nimport {APIResponseType, instance, ResponseCode} from './api'\r\n\r\ntype SavePhotoResponseType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return (\r\n            instance.get<ProfileType>(`profile/` + userId)\r\n                .then(res => res.data)\r\n        )\r\n    },\r\n    getStatus(userId: number) {\r\n        return (\r\n            instance.get<string>(`profile/status/` + userId)\r\n                .then(res => res.data)\r\n        )\r\n    },\r\n    updateStatus(status: string) {\r\n        return (\r\n            instance.put<APIResponseType>(`profile/status/`, { status: status })\r\n                .then(res => res.data)\r\n        )\r\n    },\r\n    savePhoto(photo: File) {\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photo)\r\n        return (\r\n            instance.put<APIResponseType<SavePhotoResponseType>>('profile/photo', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }))\r\n\r\n    },\r\n    saveProfile(profileInfo: any) {\r\n        return (\r\n            instance.put<APIResponseType>(`profile`, profileInfo)\r\n                .then(res => res.data)\r\n        )\r\n    }\r\n}\r\n\r\n","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\UsersPage\\User.tsx",["156"],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\SocialLinksComponent.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\App.tsx",["157"],"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\dialogs-reducer.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\ProfilePage\\ProfileInEditMode.tsx",["158"],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\FooterMobile\\FooterMobile.tsx",["159"],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\PostsPage\\PostsPage.tsx",["160","161"],"import React, {useEffect, useState} from 'react'\r\nimport {getPosts} from '../../../redux/posts-reducer'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {UserPost} from './UserPost'\r\nimport Preloader from '../../Preloader/Preloader'\r\nimport {Row} from 'react-bootstrap'\r\nimport {getPostsData, getPostsTotalCount,} from '../../../redux/selectors/posts-selectors'\r\nimport {motion} from 'framer-motion'\r\n\r\nconst PostsPage: React.FC = () => {\r\n    const [page, setPage] = useState(0)\r\n    const [isFetching, setIsFetching] = useState(true)\r\n\r\n    const posts = useSelector(getPostsData)\r\n    const totalCount = useSelector(getPostsTotalCount)\r\n    const dispatch = useDispatch()\r\n    //because the second page throws an error\r\n    if (page === 2) {\r\n        setPage(3)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isFetching) {\r\n            dispatch(getPosts(page))\r\n                // @ts-ignore\r\n                .then(() => setPage(prevState => prevState + 1))\r\n                .finally(() => {\r\n                    setIsFetching(false)\r\n                })\r\n        }\r\n    }, [isFetching])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('scroll', scrollHandler)\r\n        return function () {\r\n            document.removeEventListener('scroll', scrollHandler)\r\n        }\r\n    }, [])\r\n\r\n    const scrollHandler = (e: Event) => {\r\n        // @ts-ignore\r\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100 &&\r\n            posts.length <= totalCount\r\n        ) {\r\n            setIsFetching(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            className='container'\r\n            initial={{opacity: 0}}\r\n            animate={{opacity: 1, transition: {duration: 0.4}}}\r\n            exit={{opacity: 0}}>\r\n            <h3 className='text-left mt-3 mb-5'>Posts</h3>\r\n            <Row>\r\n                {posts.length ? (\r\n                    <>\r\n                        <UserPost posts={posts}/>\r\n                    </>\r\n                ) : (\r\n                    <Preloader/>\r\n                )}\r\n            </Row>\r\n            {isFetching ? <Preloader/> : ''}\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default PostsPage\r\n","D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\LoginPage\\Login.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\SavedPage\\SavedPage.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\UsersPage\\UsersPage.tsx",["162","163"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { getUsers } from '../../../redux/users-reducer'\r\nimport {\r\n\tgetCurrentPage,\r\n\tgetPageSize,\r\n} from '../../../redux/selectors/users-selectors'\r\nimport { withAuthToRedirect } from '../../hoc/withAuthToRedirect'\r\nimport Users from './Users'\r\nimport { motion } from 'framer-motion'\r\n\r\nconst UsersPage: React.FC = ({}) => {\r\n\tconst pageSize = useSelector(getPageSize)\r\n\tconst currentPage = useSelector(getCurrentPage)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getUsers(currentPage, pageSize))\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<motion.div\r\n\t\t\tinitial={{ opacity: 0 }}\r\n\t\t\tanimate={{ opacity: 1, transition: { duration: 0.4 } }}\r\n\t\t\texit={{ opacity: 0 }}>\r\n\t\t\t<Users />\r\n\t\t</motion.div>\r\n\t)\r\n}\r\n\r\nexport default compose(withAuthToRedirect)(UsersPage) as React.ComponentType\r\n","D:\\Programming\\GitHub\\Social-Network\\src\\api\\users-api.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\selectors\\users-selectors.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\hoc\\withAuthToRedirect.tsx",[],"D:\\Programming\\GitHub\\Social-Network\\src\\api\\api.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\redux\\selectors\\posts-selectors.ts",[],"D:\\Programming\\GitHub\\Social-Network\\src\\components\\Pages\\PostsPage\\UserPost.tsx",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"164","replacedBy":"168"},{"ruleId":"166","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":13},{"ruleId":"170","severity":1,"message":"174","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":16},{"ruleId":"175","severity":1,"message":"176","line":71,"column":29,"nodeType":"177","endLine":71,"endColumn":35},{"ruleId":"178","severity":1,"message":"179","line":73,"column":25,"nodeType":"177","endLine":73,"endColumn":60},{"ruleId":"170","severity":1,"message":"180","line":15,"column":12,"nodeType":"172","messageId":"173","endLine":15,"endColumn":23},{"ruleId":"164","replacedBy":"181"},{"ruleId":"166","replacedBy":"182"},{"ruleId":"164","replacedBy":"183"},{"ruleId":"166","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":31,"column":5,"nodeType":"187","endLine":31,"endColumn":7,"suggestions":"188"},{"ruleId":"185","severity":1,"message":"189","line":51,"column":5,"nodeType":"187","endLine":51,"endColumn":32,"suggestions":"190"},{"ruleId":"170","severity":1,"message":"191","line":2,"column":36,"nodeType":"172","messageId":"173","endLine":2,"endColumn":48},{"ruleId":"170","severity":1,"message":"192","line":7,"column":10,"nodeType":"172","messageId":"173","endLine":7,"endColumn":21},{"ruleId":"185","severity":1,"message":"193","line":31,"column":5,"nodeType":"187","endLine":31,"endColumn":7,"suggestions":"194"},{"ruleId":"185","severity":1,"message":"195","line":36,"column":8,"nodeType":"187","endLine":36,"endColumn":10,"suggestions":"196"},{"ruleId":"178","severity":1,"message":"179","line":54,"column":21,"nodeType":"177","endLine":54,"endColumn":56},{"ruleId":"185","severity":1,"message":"197","line":31,"column":8,"nodeType":"187","endLine":31,"endColumn":20,"suggestions":"198"},{"ruleId":"185","severity":1,"message":"199","line":38,"column":8,"nodeType":"187","endLine":38,"endColumn":10,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":13,"column":30,"nodeType":"203","messageId":"204","endLine":13,"endColumn":32},{"ruleId":"185","severity":1,"message":"205","line":21,"column":5,"nodeType":"187","endLine":21,"endColumn":7,"suggestions":"206"},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],["207"],["208"],"@typescript-eslint/no-unused-vars","'bxCog' is defined but never used.","Identifier","unusedVar","'bxSearch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'screenWidth' is assigned a value but never used.",["207"],["208"],["207"],["208"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authorizedUserId', 'dispatch', and 'props.match.params.userId'. Either include them or remove the dependency array.","ArrayExpression",["209"],"React Hook useEffect has missing dependencies: 'authorizedUserId', 'dispatch', and 'prevUserId'. Either include them or remove the dependency array.",["210"],"'ResponseCode' is defined but never used.","'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["211"],"React Hook useEffect has missing dependencies: 'contacts' and 'profile'. Either include them or remove the dependency array. If 'setInputName' needs the current value of 'profile', you can also switch to useReducer instead of useState and read 'profile' in the reducer.",["212"],"React Hook useEffect has missing dependencies: 'dispatch' and 'page'. Either include them or remove the dependency array.",["213"],"React Hook useEffect has a missing dependency: 'scrollHandler'. Either include it or remove the dependency array.",["214"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', and 'pageSize'. Either include them or remove the dependency array.",["215"],"no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},"Update the dependencies array to be: [authorizedUserId, dispatch, props.match.params.userId]",{"range":"230","text":"231"},"Update the dependencies array to be: [authorizedUserId, dispatch, prevUserId, props.match.params.userId]",{"range":"232","text":"233"},"Update the dependencies array to be: [dispatch]",{"range":"234","text":"235"},"Update the dependencies array to be: [contacts, profile]",{"range":"236","text":"237"},"Update the dependencies array to be: [dispatch, isFetching, page]",{"range":"238","text":"239"},"Update the dependencies array to be: [scrollHandler]",{"range":"240","text":"241"},"Update the dependencies array to be: [currentPage, dispatch, pageSize]",{"range":"242","text":"243"},[997,999],"[authorizedUserId, dispatch, props.match.params.userId]",[1498,1525],"[authorizedUserId, dispatch, prevUserId, props.match.params.userId]",[1279,1281],"[dispatch]",[1335,1337],"[contacts, profile]",[1087,1099],"[dispatch, isFetching, page]",[1302,1304],"[scrollHandler]",[659,661],"[currentPage, dispatch, pageSize]"]